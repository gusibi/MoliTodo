name: Build on Tag
on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write  # 允许创建 Release 和上传文件

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Setup Python (macOS)
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: npm install
      - run: npm run build:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false
          PYTHON_PATH: /usr/bin/python3
          npm_config_python: /usr/bin/python3
      - name: List build artifacts
        run: ls -la dist/
      - uses: actions/upload-artifact@v4
        with:
          name: macos-dmg
          path: dist/*.dmg

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1
      - name: Setup Visual Studio Build Tools
        run: |
          choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --includeRecommended --includeOptional --passive"
      - run: npm install
      - run: npm run build:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v4
        with:
          name: windows-exe
          path: dist/*.exe

  release:
    needs: [build-macos, build-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: macos-dmg
          path: dist/
      - uses: actions/download-artifact@v4
        with:
          name: windows-exe
          path: dist/
      - name: List all artifacts
        run: ls -la dist/
      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      - name: Generate release notes
        run: |
          cat > RELEASE_NOTES.md << 'EOF'
          # MoliTodo v${{ steps.get_version.outputs.VERSION }} ✨
          
          ## 🌍 Language Support & Enhanced Calendar
          
          ### New Features
          - **Language Switching**: Complete internationalization with real-time language switching (English/Chinese)
          - **Enhanced Calendar**: Integrated task list panel in calendar views for unified task management
          
          ### 🍎 macOS Installation
          
          Due to unsigned code, macOS users need to run this command after installation:
          
          ```bash
          sudo xattr -rd com.apple.quarantine /Applications/MoliTodo.app
          ```
          
          Run this command:
          - After first installation
          - After each update
          - If you see "cannot open application" error
          
          ### 📥 Download
          
          - **macOS**: Choose the appropriate version for your Mac (Intel/Apple Silicon)
          - **Windows**: Universal installer for Windows 10+
          
          ### Key Improvements
          
          - **Multi-language Interface**: Switch between English and Chinese in settings
          - **Calendar Integration**: Task list panel added to calendar views
          - **Real-time Updates**: Language changes apply immediately
          - **Unified Workflow**: Manage tasks directly from calendar interface
          
          ### Upgrade Notes
          
          - All existing data preserved
          - New features available immediately
          - Language auto-detected from system settings
          - No configuration required
          
          ---
          
          **Full Documentation**: [Release Notes](https://github.com/${{ github.repository }}/blob/main/docs/releases/v${{ steps.get_version.outputs.VERSION }}.md)
          **Issues & Support**: [GitHub Issues](https://github.com/${{ github.repository }}/issues)
          EOF
      - uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.dmg
            dist/*.exe
          generate_release_notes: true
          draft: false
          prerelease: false
          body_path: RELEASE_NOTES.md